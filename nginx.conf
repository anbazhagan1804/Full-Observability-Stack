worker_processes 1;

events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;

        # Add OpenTelemetry trace context headers
        add_header X-Trace-Id $request_id;

        # Service A endpoints
        location /api/service-a/ {
            proxy_pass http://service-a:8081/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Propagate trace context
            proxy_set_header traceparent $http_traceparent;
            proxy_set_header tracestate $http_tracestate;
        }

        # Service B endpoints
        location /api/service-b/ {
            proxy_pass http://service-b:8082/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Propagate trace context
            proxy_set_header traceparent $http_traceparent;
            proxy_set_header tracestate $http_tracestate;
        }

        # Health check endpoint
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        # Metrics endpoint for Prometheus
        location /metrics {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;
            deny all;
        }
    }
}